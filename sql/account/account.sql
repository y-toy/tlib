/*****************************************************************************/
/*** ユーザ情報 ***/
/*****************************************************************************/

CREATE TABLE `USERS` (
	`USER_ID` INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	'USER_ID_CHARS' VARCHAR(128) UNIQUE comment 'hash("sha3-512", datetime+fixed-solt+randam(32)) ユーザID識別子 必ず英数混在（USER_IDの数値を外に出したくない場合用）',
	`USER_NAME` VARCHAR(255) NOT NULL comment 'ユーザ名 基本はメールアドレス / 電話番号',
	`PASS` VARCHAR(128) NOT NULL comment 'パスワード hash("sha3-512", "password" + fixed-solt)',
	`VERIFICATION_ID` INT UNSIGNED DEFAULT 0 comment 'USER_VERIFICATIONS::VERIFICATION_ID メインで使用するメール／SMS 0の場合は未設定',
	'LOCKED' TINYINT DEFAULT 0 comment '不正利用などでロックする場合1',
	'VALID' TINYINT DEFAULT 0 comment '有効なアカウントの場合1 登録中は0',
	'INSERT_TIME' TIMESTAMP NOT NULL comment '登録時間',
	'UPDATE_TIME' TIMESTAMP NOT NULL CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP comment '更新時間',
	INDEX INDEX_ACCOUNT_ID_CHARS (USER_ID_CHARS),
	INDEX INDEX_USER_NAME (USER_NAME)
) comment 'ユーザ認証情報';

CREATE TABLE `USER_VERIFICATIONS` (
    `VERIFICATION_ID` INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `USER_ID` INT UNSIGNED NOT NULL comment 'USERS::USER_ID',
    `CONTACT` VARCHAR(255) NOT NULL comment 'メールアドレスまたは電話番号',
    `CONTACT_TYPE` TINYINT UNSIGNED NOT NULL comment '連絡先の種類 1: EMAIL 2: SMS',
	`FLG_MAIN` TINYINT UNSIGNED DEFAULT 0 comment 'メインで使用するメール／SMS 1の場合はメイン',
	'INSERT_TIME' TIMESTAMP NOT NULL comment '登録時間' ON INSERT CURRENT_TIMESTAMP,
    FOREIGN KEY (`USER_ID`) REFERENCES `USERS`(`USER_ID`) ON DELETE CASCADE,
    INDEX INDEX_USER_ID (USER_ID)
) comment 'ユーザの登録しているメールアドレス／SMS';

CREATE TABLE `USER_VERIFICATIONS_SESSION` (
	`USER_ID` INT UNSIGNED NOT NULL comment 'USERS::USER_ID',
	'SESSION_CODE' VARCHAR(128) UNIQUE comment 'hash("sha3-512", datetime+fixed-solt+randam(32))',
	`CONTACT` VARCHAR(255) NOT NULL comment 'メールアドレスまたは電話番号',
	`CONTACT_TYPE` TINYINT UNSIGNED NOT NULL comment '連絡先の種類 1: EMAIL 2: SMS',
	`VERIFICATION_CODE` CHAR(16) comment '認証コード',
	`ADDITIONAL_DATA` JSON DEFAULT JSON_OBJECT() comment 'セッション間でやり取りするオプションのデータ',
	`EXPIRATION_TIME` TIMESTAMP comment '認証コードの有効期限',
	FOREIGN KEY (`USER_ID`) REFERENCES `USERS`(`USER_ID`) ON DELETE CASCADE,
	CHECK (JSON_VALID(ADDITIONAL_DATA)),
	INDEX INDEX_USER_ID (USER_ID),
	INDEX INDEX_SESSION_CODE (SESSION_CODE)
) comment 'ユーザの認証中のセッション管理用';

CREATE TABLE USER_INFO (
	USER_ID INT UNSIGNED NOT NULL comment 'USERS::USER_ID',
	USER_DISP_NAME VARCHAR(255) NOT NULL COMMENT 'ユーザ表示名',
	LANG CHAR(2) DEFAULT 'en' COMMENT '言語 ISO 639-1',
	GENDER TINYINT UNSIGNED DEFAULT 0 COMMENT '性別 0 不明 1 男性 2 女性',
	BIRTHDATE DATE DEFAULT NULL COMMENT '生年月日',
	WEIGHT DECIMAL(5,2) DEFAULT 0 COMMENT '体重',
	HEIGHT DECIMAL(5,2) DEFAULT 0 COMMENT '身長',
	FLG_PUBLIC TINYINT DEFAULT 0 COMMENT '公開フラグ 0 非公開 1 公開',
	EXTRA_INFO JSON DEFAULT JSON_OBJECT() COMMENT '追加情報',
	INSERT_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '作成日時',
	UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新日時',
	INDEX INDEX_USER_ID (USER_ID),
	CHECK (JSON_VALID(EXTRA_INFO)),
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
) COMMENT 'ユーザ情報';

CREATE TABLE USER_ADDRESS (
	ADDRESS_ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	USER_ID INT UNSIGNED NOT NULL COMMENT 'USERS::USER_ID',
	ADDRESS_TYPE TINYINT NOT NULL COMMENT '住所種別 1: 住所 2: 請求先住所 3: 配送先住所 4: その他',
	FLG_MAIN TINYINT DEFAULT 1 COMMENT 'メイン使用フラグ 1: メイン 0: サブ ADDRESS_TYPEの中で最も優先される住所',
	BUILDING VARCHAR(255) NOT NULL COMMENT 'ビル名',
	STREET VARCHAR(255) COMMENT '町名／番地',
	CITY VARCHAR(255) NOT NULL COMMENT '市区町村',
	STATE VARCHAR(255) NOT NULL COMMENT '都道府県',
	ZIP_CODE VARCHAR(10) NOT NULL COMMENT '郵便番号',
	COUNTRY VARCHAR(255) NOT NULL COMMENT '国',
	COMPANY_NAME VARCHAR(255) default '' COMMENT '会社名',
	DEPARTMENT_NAME VARCHAR(255)  default '' COMMENT '部署名',
	PERSON_NAME VARCHAR(128) COMMENT '役職名',
	INSERT_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '作成日時',
	UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新日時',
	INDEX INDEX_USER_ID (USER_ID),
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
) COMMENT 'ユーザの住所情報';

/*****************************************************************************/
/*** 所属グループ情報 ***/
/*****************************************************************************/

CREATE TABLE `GROUPS` (
	`GROUP_ID` INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	`GROUP_NAMES` JSON NOT NULL comment '組織名を多言語で管理 {"en": "English Name", "ja": "日本語名"} ISO639 2 letter code',
	'INSERT_TIME' TIMESTAMP NOT NULL comment '登録時間',
	'UPDATE_TIME' TIMESTAMP NOT NULL comment '更新時間',
	INDEX INDEX_GROUP_ID (GROUP_ID) comment '組織IDにインデックスを設定'
) comment '組織を定義するテーブル';

CREATE TABLE `ROLES` (
	`ROLE_ID` INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	`ROLE_NAMES` JSON NOT NULL comment '役割名を多言語で管理 {"en": "English Name", "ja": "日本語名"} ISO639 2 letter code',
	'INSERT_TIME' TIMESTAMP NOT NULL comment '登録時間',
	'UPDATE_TIME' TIMESTAMP NOT NULL comment '更新時間',
	INDEX INDEX_ROLE_ID (ROLE_ID) comment '役割IDにインデックスを設定'
) comment '役割を定義するテーブル';

CREATE TABLE `USER_GROUP_ROLES` (
	`USER_ID` INT UNSIGNED NOT NULL,
	`GROUP_ID` INT UNSIGNED NOT NULL,
	`ROLE_ID` INT UNSIGNED NOT NULL,
	'INSERT_TIME' TIMESTAMP NOT NULL comment '登録時間',
	'UPDATE_TIME' TIMESTAMP NOT NULL comment '更新時間',
	PRIMARY KEY (`USER_ID`, `GROUP_ID`, `ROLE_ID`),
	FOREIGN KEY (`USER_ID`) REFERENCES `USERS`(`USER_ID`) ON DELETE CASCADE,
	FOREIGN KEY (`GROUP_ID`) REFERENCES `GROUPS`(`GROUP_ID`) ON DELETE CASCADE,
	FOREIGN KEY (`ROLE_ID`) REFERENCES `ROLES`(`ROLE_ID`) ON DELETE CASCADE,
	INDEX INDEX_USER_ID (USER_ID) comment 'ユーザIDにインデックスを設定',
	INDEX INDEX_GROUP_ID (GROUP_ID) comment '組織IDにインデックスを設定',
	INDEX INDEX_ROLE_ID (ROLE_ID) comment '役割IDにインデックスを設定'
) comment 'ユーザがどの組織にどの役割で所属しているかを定義するテーブル';

